{"version":3,"file":"index.js","mappings":"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","sources":["webpack://my-first-gutenberg-app/external window [\"wp\",\"components\"]","webpack://my-first-gutenberg-app/external window [\"wp\",\"coreData\"]","webpack://my-first-gutenberg-app/external window [\"wp\",\"data\"]","webpack://my-first-gutenberg-app/external window [\"wp\",\"element\"]","webpack://my-first-gutenberg-app/external window [\"wp\",\"htmlEntities\"]","webpack://my-first-gutenberg-app/external window [\"wp\",\"notices\"]","webpack://my-first-gutenberg-app/webpack/bootstrap","webpack://my-first-gutenberg-app/webpack/runtime/compat get default export","webpack://my-first-gutenberg-app/webpack/runtime/define property getters","webpack://my-first-gutenberg-app/webpack/runtime/hasOwnProperty shorthand","webpack://my-first-gutenberg-app/webpack/runtime/make namespace object","webpack://my-first-gutenberg-app/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","module.exports = window[\"wp\"][\"notices\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import { render } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreDataStore } from '@wordpress/core-data';\n\n//needed post title may contain HTML entities like &aacute;, so \n//we need to use the decodeEntities function to replace them\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { useState, render } from '@wordpress/element';\n//needed for Search Box above Page list. (Step 4)\nimport { \n    SearchControl, \n    Spinner, \n    Button,\n    Modal,\n    TextControl\n} from '@wordpress/components';\n\n\n/* \nfunction MyFirstApp() {\n    return <span>Hello from JavaScript!</span>;\n}\n*/\n\nconst DeletePageButton = ({ pageId, onCancel, onSaveFinished }) => {\n    // fortesting error messages.: pageId = pageId * 1000;\n    const { getLastEntityDeleteError } = useSelect( coreDataStore )\n    const { deleteEntityRecord } = useDispatch( coreDataStore );\n    const { createSuccessNotice, createErrorNotice } = useDispatch( noticesStore );\n   // const handleDelete = () => deleteEntityRecord( 'postType', 'page', pageId );\n   const handleDelete = async () => {\n    const success = await deleteEntityRecord( 'postType', 'page', pageId);\n    \n        if ( success ) {\n            // Tell the user the operation succeeded:\n            createSuccessNotice( \"The page was deleted!\", {\n                type: 'snackbar',\n            } );\n            } else {\n                const lastError = getLastEntityDeleteError( 'postType', 'page', pageId );\n                const message = ( lastError?.message || 'There was an error.' ) + ' Please refresh the page and try again.'\n                // Tell the user how exactly the operation has failed:\n                createErrorNotice( message, {\n                    type: 'snackbar',\n                } );\n        }\n    }\n\n    const { isDeleting } =  useSelect(\n        select => ({ isDeleting: select( coreDataStore ).isDeletingEntityRecord( 'pageType', 'page', pageId )\n    }), [ pageId ]\n    );\n    return (\n        <Button \n            variant=\"primary\" \n            onClick={ handleDelete }\n            disabled={ isDeleting}\n        >\n        { isDeleting ? (\n                <>\n                    <Spinner />\n                    Deleting...\n                </>\n            ) : 'Delete' }\n        </Button>\n    )\n}\n\n\n\nfunction CreatePageButton() {\n    const [isOpen, setOpen] = useState( false );\n    const openModal = () => setOpen( true );\n    const closeModal = () => setOpen( false );\n    return (\n        <>\n            <Button onClick={ openModal } variant=\"primary\">\n                Create a new Page\n            </Button>\n            { isOpen && (\n                <Modal onRequestClose={ closeModal } title=\"Create a new page\">\n                    <CreatePageForm\n                        onCancel={ closeModal }\n                        onSaveFinished={ closeModal }\n                    />\n                </Modal>\n            ) }\n        </>\n    );\n}\n\n\nfunction PageEditButton({ pageId }) {\n    //right from the code examples in the Component Storybook\n    const [isOpen, setOpen ] = useState ( false );\n    const openModal = () => setOpen( true );\n    const closeModal = () => setOpen( false );\n\n    return (\n        < >\n        <Button onClick={ openModal } variant=\"primary\">\n           Edit\n        </Button>\n        {isOpen && (\n            <Modal onRequestClose={ closeModal } title=\"Edit Page\">\n                <EditPageForm\n                    pageId={pageId}\n                    onCancel={closeModal}\n                    onSaveFinished={closeModal}\n                    />\n            </Modal>\n        ) }\n        </>\n    )\n}\n\nexport function PageForm({ title, onChangeTitle, hasEdits, lastError, isSaving, onCancel, onSave }){\n\n    return (\n        <div className=\"my-gutenberg-form\">\n            <TextControl\n                value={ title }\n                label='Page title:'\n                onChange={ onChangeTitle }\n            />\n             { lastError ? (\n                <div className=\"form-error\">\n                    Error: { lastError.message }\n                </div>\n            ) : ( false ) }\n            <div className=\"form-buttons\">\n                <Button \n                    onClick={ onSave } \n                    variant=\"primary\" \n                    disabled={ ! hasEdits || isSaving }\n                    >\n                { isSaving ? (\n                    <>\n                        <Spinner/>\n                        Saving\n                    </>\n                ) : 'Save' }\n                </Button>\n                <Button \n                    onClick={ onCancel } \n                    variant=\"tertiary\"\n                    disabled={ isSaving }\n                    >\n                    Cancel\n                </Button>\n            </div>\n        </div>\n       \n    );\n\n}\n\nexport function CreatePageForm( { onCancel, onSaveFinished } ) {\n    const [title, setTitle] = useState();\n    const { saveEntityRecord } = useDispatch( coreDataStore );\n    const handleChange = ( title ) => setTitle ( title );\n    const handleSave = async () => {\n\t\tconst savedRecord = await saveEntityRecord( 'postType', 'page', {\n\t\t\ttitle,\n\t\t\tstatus: 'publish',\n\t\t} );\n\t\tif ( savedRecord ) {\n\t\t\tonSaveFinished();\n\t\t}\n\t};\n    const { lastError, isSaving } = useSelect(\n\t\t( select ) => ( {\n\t\t\t// Notice the missing pageId argument:\n\t\t\tlastError: select( coreDataStore ).getLastEntitySaveError(\n\t\t\t\t'postType',\n\t\t\t\t'page'\n\t\t\t),\n\t\t\t// Notice the missing pageId argument\n\t\t\tisSaving: select( coreDataStore ).isSavingEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'page'\n\t\t\t),\n\t\t} ),\n\t\t[]\n\t);\n    return (\n        <PageForm\n            title={ title }\n            onChangeTitle={ handleChange }\n            hasEdits={ !!title }\n            onSave={ handleSave }\n            onCancel={ onCancel }\n            lastError={ lastError }\n            isSaving={ isSaving }\n        />\n    );\n}\n\nexport function EditPageForm( { pageId, onCancel, onSaveFinished } ) {\n    const { isSaving, hasEdits,lastError, page } = useSelect(\n        select => ({ \n            page: select( coreDataStore ).getEditedEntityRecord( 'postType', 'page', pageId ),\n            lastError: select( coreDataStore ).getLastEntitySaveError( 'postType', 'page', pageId ),\n            isSaving: select( coreDataStore  ).isSavingEntityRecord( 'postType', 'page', pageId ),\n            hasEdits: select( coreDataStore ).hasEditsForEntityRecord( 'postType', 'page', pageId )\n        }),\n        [pageId]\n    );\n    const { editEntityRecord, saveEditedEntityRecord } = useDispatch( coreDataStore );\n    // to test the error message \n    // const handleChange = ( title ) => editEntityRecord( 'postType', 'page', pageId, { title, date: -1 });\n    \n    const handleChange = ( title ) => editEntityRecord( 'postType', 'page', pageId, { title });\n    const handleSave = async () => {\n       const updatedRecord =  await saveEditedEntityRecord( 'postType', 'page', pageId );\n        if ( updatedRecord ) {\n            onSaveFinished();\n        }\n    };\n\n    return (\n    \n        <PageForm\n        title={ page.title }\n        onChangeTitle={ handleChange }\n        hasEdits={ hasEdits }\n        lastError={ lastError }\n        isSaving={ isSaving }\n        onCancel={ onCancel }\n        onSave={ handleSave }\n           />\n       /* <div className=\"my-gutenberg-form\">\n            <TextControl\n                value={ page.title }\n                label='Page title:'\n                onChange={ handleChange }\n            />\n             { lastError ? (\n                <div className=\"form-error\">\n                    Error: { lastError.message }\n                </div>\n            ) : false }\n            <div className=\"form-buttons\">\n                <Button \n                    onClick={ handleSave } \n                    variant=\"primary\" \n                    disabled={ ! hasEdits || isSaving }\n                    >\n                { isSaving ? (\n                    <>\n                        <Spinner/>\n                        Saving\n                    </>\n                ) : 'Save' }\n                </Button>\n                <Button \n                    onClick={ onCancel } \n                    variant=\"tertiary\"\n                    disabled={ isSaving }\n                    >\n                    Cancel\n                </Button>\n            </div>\n        </div>\n       */\n    );\n}\n\nfunction MyFirstApp() {\n    //Step 5\n   \n    //const pages = [{ id: 'mock', title: 'Sample page' }]\n   /* const pages = useSelect(\n        select => select( coreDataStore ).getEntityRecords( 'postType', 'page' ),\n        []\n    );\n    */\n    /* now allow the searchterm narrow down the list, if search box is used. */\n    const [searchTerm, setSearchTerm] = useState( '' );\n    const  { pages, hasResolved } = useSelect( select => {\n        const query = {};\n        if ( searchTerm ){\n            query.search = searchTerm;\n        }\n        const selectorArgs = [ 'postType', 'page', query ];\n        return  {\n            pages: select( coreDataStore ).getEntityRecords( ...selectorArgs ),\n            hasResolved: select( coreDataStore )\n                .hasFinishedResolution('getEntityRecords', selectorArgs ),\n        };\n    },[ searchTerm ]\n    );\n\n    return (\n        < >\n            <Notifications />\n            <div className=\"list-controls\">\n                <SearchControl\n                onChange={ setSearchTerm }\n                value={ searchTerm }\n                />\n                <CreatePageButton/>\n            </div>\n             <PagesList hasResolved={ hasResolved } pages={ pages }/>\n          </ >\n    );\n    }\n  \n/*function PagesList( { pages } ) {\n    return (\n        <ul>\n            { pages?.map( page => (\n                <li key={ page.id }>\n                    { decodeEntities( page.title.rendered ) }\n                </li>\n            ) ) }\n        </ul>\n    );\n}*/\n\n// For step 4: Add a Search box on top of things. \n\n// Step 4 turning list into an HTML table\nfunction PagesList( { hasResolved, pages } ) {\n\n        if ( !hasResolved ) {\n            return <Spinner/>;\n        }\n        if ( !pages?.length ) {\n            return <div>No results</div>;\n        }\n    \n\n    return (\n        <table className=\"wp-list-table widefat fixed striped table-view-list\">\n            <thead>\n                <tr>\n                    <th><strong>List of pages</strong></th>\n                    <th style={{width:120}}>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                { pages?.map( page => (\n                    <tr key={ page.id }>\n                        <td>{ decodeEntities( page.title.rendered ) }</td>\n                        <td>\n                            <div className=\"form-buttons\">\n                                 <PageEditButton pageId={ page.id } />\n                                 <DeletePageButton pageId={ page.id }/>\n                            </div>\n                        </td>\n                    </tr>\n                ) ) }\n            </tbody>\n        </table>\n    );\n}\n\n\nimport { SnackbarList } from '@wordpress/components';\nimport { store as noticesStore } from '@wordpress/notices';\n \nfunction Notifications() {\n        const notices = useSelect(\n            ( select ) => select( noticesStore ).getNotices(),\n            []\n        );\n        const { removeNotice } = useDispatch( noticesStore );\n        const snackbarNotices = notices.filter( ({ type }) => type === 'snackbar' );\n     \n\n    return (\n        <SnackbarList\n        notices={ snackbarNotices }\n        className=\"components-editor-notices__snackbar\"\n        onRemove={ removeNotice }\n         />\n    );\n}\n\nwindow.addEventListener(\n    'load',\n    function () {\n        render(\n            <MyFirstApp />,\n            document.querySelector( '#my-first-gutenberg-app' )\n        );\n    },\n    false\n);"],"names":["useSelect","useDispatch","store","coreDataStore","decodeEntities","useState","render","SearchControl","Spinner","Button","Modal","TextControl","DeletePageButton","pageId","onCancel","onSaveFinished","getLastEntityDeleteError","deleteEntityRecord","createSuccessNotice","createErrorNotice","noticesStore","handleDelete","success","type","lastError","message","isDeleting","select","isDeletingEntityRecord","createElement","variant","onClick","disabled","Fragment","CreatePageButton","isOpen","setOpen","openModal","closeModal","onRequestClose","title","CreatePageForm","PageEditButton","EditPageForm","PageForm","onChangeTitle","hasEdits","isSaving","onSave","className","value","label","onChange","setTitle","saveEntityRecord","handleChange","handleSave","savedRecord","status","getLastEntitySaveError","isSavingEntityRecord","page","getEditedEntityRecord","hasEditsForEntityRecord","editEntityRecord","saveEditedEntityRecord","updatedRecord","MyFirstApp","searchTerm","setSearchTerm","pages","hasResolved","query","search","selectorArgs","getEntityRecords","hasFinishedResolution","Notifications","PagesList","length","style","width","map","key","id","rendered","SnackbarList","notices","getNotices","removeNotice","snackbarNotices","filter","onRemove","window","addEventListener","document","querySelector"],"sourceRoot":""}